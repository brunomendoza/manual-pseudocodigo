función natural Factoríalm)
variable entrada natural N
local natural Resultado

a1 N < 2 entonces

Resultado <- l
si no

Resultado <- (N ‘r Factoría]. (N—1))
fin si
devolver Resultado
fin función {Factorial}

función natural FíbonaCci(N)
‘inﬂable entrada natural N
local natural Resultado
si N < 2 entonces
Resultado k l
a1 no
Resultado °
{in si
devolver Resultado
ﬁn función [Fibonacci]

(Fibonacci(N-1l"FibonaCCi(N»2)l

tipo Varillas es entero 1. .3 Ein tipo

procedimiento Hanoi (NumDis , VI , VF, VAux)
Variables antradn Positivo NumDis
Varillas vI, VF, VAux
si NumDis : 1 entonces
PasarUnDiscoWLVF)
ni no
Hanoi (NumDis—1,VI,VAux,VF)
Hanoi(1,VI,VF)
Hanoi (NuInDis-1,VAux,VF,VIl
fin si
retornar
nn procedimiento {Hanoi}

En estos tres algoritmos, que resuelven los problemas planteados previamente podemos

observar:

l. Que los tres tienen, como se había indicado, la misma estructura, basada en una
sentencia altemativa que diferencia el caso o casos base del problema, del caso general.

2. Que los tres empiezan resolviendo lo más fácil, los casas que corresponden a las

condiciones de base.

3. Que el caso general se descompone en varios casos más sencillos del mismo problema
y de una parte ——normalment.e-— no recuxsiva, que se componen entre sl para dar la
solución. Tanto la solución del caso base, como las panes no recursivas del caso general

pueden incluir las estructuras no recursivas que sean oportunas, dc acuerdo a su

{Llamada recursiva

(Llamada recursiva

¡Llamadas recursivas

complejidad, aunque esto no se vc en los ejemplos, dada su sencillez.

67

